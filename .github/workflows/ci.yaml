name: ci

on:
  push:
    branches:
      - main
  pull_request:

permissions: {}

env:
  XDG_DATA_HOME: ${{ github.workspace }}/.local/share
  flake: github:${{ github.repository }}/${{ github.sha }}
  nix-conf: |-
    accept-flake-config = true
    always-allow-substitutes = true
    builders-use-substitutes = true
    max-jobs = auto

jobs:
  flake-show:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, ubuntu-24.04-arm ]
    steps:
      - uses: DeterminateSystems/nix-installer-action@v18
        with:
          extra-conf: ${{ env.nix-conf }}
      - name: nix-flake-show
        run: nix flake show '${{ env.flake }}'

  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.gen-matrix.outputs.matrix }}
    steps:
      - uses: DeterminateSystems/nix-installer-action@v18
        with:
          extra-conf: ${{ env.nix-conf }}
      - id: gen-matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '${{ env.flake }}#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  build:
    name: build ${{ matrix.attr }}
    runs-on: ${{ matrix.os }}
    needs: [ nix-matrix ]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.nix-matrix.outputs.matrix) }}
    steps:
      - uses: DeterminateSystems/nix-installer-action@v18
        with:
          extra-conf: ${{ env.nix-conf }}
      - name: nix-fast-build
        run: |
          nix run '${{ env.flake }}#nix-fast-build' -- \
            --no-nom \
            --skip-cached \
            --option accept-flake-config true \
            --retries=3 \
            --flake='${{ env.flake }}#${{ matrix.attr }}'

  ci-good:
    runs-on: ubuntu-latest
    needs: [ flake-show, build ]
    if: always()
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: eval
